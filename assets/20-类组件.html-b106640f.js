const t=JSON.parse('{"key":"v-55d96849","path":"/code/react/React18/20-%E7%B1%BB%E7%BB%84%E4%BB%B6.html","title":"20-类组件","lang":"zh-CN","frontmatter":{"category":"react18","title":"20-类组件","updated":"2023-05-13 22:56","description":"函数组件中，响应函数直接以函数的形式定义在组件中，但是在类组件中，响应函数是以类的方法来定义 主要的区别是 this 类组件的 props 类组件的 props 是存储到类的实例对象中，可以直接通过实例对象访问this.props 类组件中 state 类组件中 state 统一存储到了实例对象的 state 属性中 可以通过 this.state 来访问 - 通过 this.setState() 对其进行修改 - 当我们通过 this.setState() 修改 state 时，React 只会修改设置了的属性","head":[["meta",{"property":"og:url","content":"https://johno666.github.io/code/react/React18/20-%E7%B1%BB%E7%BB%84%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"小阿俊@博客"}],["meta",{"property":"og:title","content":"20-类组件"}],["meta",{"property":"og:description","content":"函数组件中，响应函数直接以函数的形式定义在组件中，但是在类组件中，响应函数是以类的方法来定义 主要的区别是 this 类组件的 props 类组件的 props 是存储到类的实例对象中，可以直接通过实例对象访问this.props 类组件中 state 类组件中 state 统一存储到了实例对象的 state 属性中 可以通过 this.state 来访问 - 通过 this.setState() 对其进行修改 - 当我们通过 this.setState() 修改 state 时，React 只会修改设置了的属性"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-19T06:11:13.000Z"}],["meta",{"property":"article:author","content":"XiaoAjun"}],["meta",{"property":"article:modified_time","content":"2023-09-19T06:11:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"20-类组件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-19T06:11:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoAjun\\",\\"url\\":\\"https://johno666.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"类组件的 props","slug":"类组件的-props","link":"#类组件的-props","children":[]},{"level":2,"title":"类组件中 state","slug":"类组件中-state","link":"#类组件中-state","children":[]},{"level":2,"title":"获取 DOM 对象","slug":"获取-dom-对象","link":"#获取-dom-对象","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1695103873000,"updatedTime":1695103873000,"contributors":[{"name":"张伟竣","email":"2938795170@qq.com","commits":1}]},"readingTime":{"minutes":1.62,"words":487},"filePathRelative":"code/react/React18/20-类组件.md","localizedDate":"2023年9月19日","excerpt":"<p>函数组件中，响应函数直接以函数的形式定义在组件中，但是在类组件中，<mark>响应函数是以类的方法来定义</mark></p>\\n<p>主要的区别是 <code>this</code></p>\\n<h2> 类组件的 props</h2>\\n<p>类组件的 props 是存储到类的实例对象中，可以直接通过实例对象访问<code>this.props</code></p>\\n<h2> 类组件中 state</h2>\\n<p>类组件中 state 统一存储到了实例对象的 state 属性中</p>\\n<p>可以通过 this.state 来访问 - 通过 <code>this.setState()</code> 对其进行修改 - 当我们通过 <code>this.setState()</code> 修改 state 时，React 只会修改设置了的属性</p>","copyright":{"author":"XiaoAjun"},"autoDesc":true}');export{t as data};
