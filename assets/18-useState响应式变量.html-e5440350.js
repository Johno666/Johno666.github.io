const t=JSON.parse('{"key":"v-ffcfcee6","path":"/code/react/React18/18-useState%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8F%98%E9%87%8F.html","title":"18-useState响应式变量","lang":"zh-CN","frontmatter":{"category":"react18","title":"18-useState响应式变量","updated":"2023-05-13 22:56","description":"代码也是有后台的 xswl🤣 state 和 props 类似，都是一种存储属性的方式，但是不同点在于 state 只属于当前组件，其他组件无法访问。并且 state 是可变的，当其发生变化后组件会自动重新渲染，以使变化在页面中呈现。 state 在 React 中，当组件渲染完毕后，再修改组件中的变量，不会使组件重新渲染 要使得组件可以收到变量的影响，必须在变量修改后对组件进行重新渲染 这里我们就需要一个特殊变量，当这个变量被修改使，组件会自动重新渲染","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/react/React18/18-useState%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8F%98%E9%87%8F.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"18-useState响应式变量"}],["meta",{"property":"og:description","content":"代码也是有后台的 xswl🤣 state 和 props 类似，都是一种存储属性的方式，但是不同点在于 state 只属于当前组件，其他组件无法访问。并且 state 是可变的，当其发生变化后组件会自动重新渲染，以使变化在页面中呈现。 state 在 React 中，当组件渲染完毕后，再修改组件中的变量，不会使组件重新渲染 要使得组件可以收到变量的影响，必须在变量修改后对组件进行重新渲染 这里我们就需要一个特殊变量，当这个变量被修改使，组件会自动重新渲染"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-19T06:11:13.000Z"}],["meta",{"property":"article:author","content":"Huxzhi"}],["meta",{"property":"article:modified_time","content":"2023-09-19T06:11:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"18-useState响应式变量\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-19T06:11:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Huxzhi\\",\\"url\\":\\"https://huxzhi.fun\\"}]}"]]},"headers":[{"level":2,"title":"标准写法","slug":"标准写法","link":"#标准写法","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{"createdTime":1695103873000,"updatedTime":1695103873000,"contributors":[{"name":"张伟竣","email":"2938795170@qq.com","commits":1}]},"readingTime":{"minutes":2.9,"words":870},"filePathRelative":"code/react/React18/18-useState响应式变量.md","localizedDate":"2023年9月19日","excerpt":"<blockquote>\\n<p>代码也是有后台的 xswl🤣</p>\\n</blockquote>\\n<p>state 和 props 类似，都是一种存储属性的方式，但是不同点在于 state 只属于当前组件，其他组件无法访问。并且 state 是可变的，当其发生变化后组件会自动重新渲染，以使变化在页面中呈现。</p>\\n<h1> state</h1>\\n<p>在 React 中，当组件渲染完毕后，再修改组件中的变量，不会使组件重新渲染</p>\\n<p>要使得组件可以收到变量的影响，必须在变量修改后对组件进行重新渲染<br>\\n这里我们就需要一个特殊变量，当这个变量被修改使，组件会自动重新渲染</p>\\n","copyright":{"author":"Huxzhi"},"autoDesc":true}');export{t as data};
