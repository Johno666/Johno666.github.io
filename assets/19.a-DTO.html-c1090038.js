const t=JSON.parse('{"key":"v-1b682cdc","path":"/code/nest-js/19.a-DTO.html","title":"19.a-DTO","lang":"zh-CN","frontmatter":{"title":"19.a-DTO","updated":"2023-05-13 22:56","description":"Data Transfer Object 数据传输对象 数据传输过程中的 数据格式 在计算机编程中，数据传输对象 是在 2 个进程中携带数据的对象。因为进程间通信通常用于远程接口的昂贵操作。成本的主体是客户和服务器之间的来回通信时间。为降低这种调用次数，使用 DTO 聚合本来需要多次通信传输的数据","head":[["meta",{"property":"og:url","content":"https://johno666.github.io/code/nest-js/19.a-DTO.html"}],["meta",{"property":"og:site_name","content":"小阿俊@博客"}],["meta",{"property":"og:title","content":"19.a-DTO"}],["meta",{"property":"og:description","content":"Data Transfer Object 数据传输对象 数据传输过程中的 数据格式 在计算机编程中，数据传输对象 是在 2 个进程中携带数据的对象。因为进程间通信通常用于远程接口的昂贵操作。成本的主体是客户和服务器之间的来回通信时间。为降低这种调用次数，使用 DTO 聚合本来需要多次通信传输的数据"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://johno666.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-19T06:11:13.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"19.a-DTO"}],["meta",{"property":"article:author","content":"XiaoAjun"}],["meta",{"property":"article:modified_time","content":"2023-09-19T06:11:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"19.a-DTO\\",\\"image\\":[\\"https://johno666.github.io/\\"],\\"dateModified\\":\\"2023-09-19T06:11:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoAjun\\",\\"url\\":\\"https://johno666.github.io/\\"}]}"]]},"headers":[],"git":{"createdTime":1695103873000,"updatedTime":1695103873000,"contributors":[{"name":"张伟竣","email":"2938795170@qq.com","commits":1}]},"readingTime":{"minutes":0.47,"words":140},"filePathRelative":"code/nest-js/19.a-DTO.md","localizedDate":"2023年9月19日","excerpt":"<p>Data Transfer Object 数据传输对象<br>\\n数据传输过程中的 数据格式</p>\\n<figure><figcaption></figcaption></figure>\\n<p>在计算机编程中，数据传输对象 是在 2 个进程中携带数据的对象。因为进程间通信通常用于远程接口的昂贵操作。成本的主体是客户和服务器之间的来回通信时间。为降低这种调用次数，使用 DTO 聚合本来需要多次通信传输的数据</p>\\n","copyright":{"author":"XiaoAjun"},"autoDesc":true}');export{t as data};
