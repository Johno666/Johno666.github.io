const e=JSON.parse(`{"key":"v-3fbf403d","path":"/code/language/typescript/%E5%B0%8F%E6%BB%A1TypeScript%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6/04-%E5%85%83%E7%BB%84%E7%B1%BB%E5%9E%8B.html","title":"04-元组类型","lang":"zh-CN","frontmatter":{"title":"04-元组类型","updated":"2023-05-13 22:56","description":"如果需要一个固定大小的不同类型值的集合，我们需要使用元组。 元组就是数组的变种 元组（Tuple）是固定数量的不同类型的元素的组合。 元组与集合的不同之处在于，元组中的元素类型可以是不同的，而且数量固定。元组的好处在于可以把多个元素作为一个单元传递。如果一个方法需要返回多个值，可以把这多个值作为元组返回，而不需要创建额外的类来表示。 let arr:[number,string] = [1,'string'] let arr2: readonly [number,boolean,string,undefined] = [1,true,'sring',undefined]","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/language/typescript/%E5%B0%8F%E6%BB%A1TypeScript%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6/04-%E5%85%83%E7%BB%84%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"04-元组类型"}],["meta",{"property":"og:description","content":"如果需要一个固定大小的不同类型值的集合，我们需要使用元组。 元组就是数组的变种 元组（Tuple）是固定数量的不同类型的元素的组合。 元组与集合的不同之处在于，元组中的元素类型可以是不同的，而且数量固定。元组的好处在于可以把多个元素作为一个单元传递。如果一个方法需要返回多个值，可以把这多个值作为元组返回，而不需要创建额外的类来表示。 let arr:[number,string] = [1,'string'] let arr2: readonly [number,boolean,string,undefined] = [1,true,'sring',undefined]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-19T06:11:13.000Z"}],["meta",{"property":"article:author","content":"Huxzhi"}],["meta",{"property":"article:modified_time","content":"2023-09-19T06:11:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04-元组类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-19T06:11:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Huxzhi\\",\\"url\\":\\"https://huxzhi.fun\\"}]}"]]},"headers":[{"level":2,"title":"元组就是数组的变种","slug":"元组就是数组的变种","link":"#元组就是数组的变种","children":[]},{"level":2,"title":"越界元素","slug":"越界元素","link":"#越界元素","children":[]},{"level":2,"title":"应用场景 例如定义execl返回的数据","slug":"应用场景-例如定义execl返回的数据","link":"#应用场景-例如定义execl返回的数据","children":[]}],"git":{"createdTime":1695103873000,"updatedTime":1695103873000,"contributors":[{"name":"张伟竣","email":"2938795170@qq.com","commits":1}]},"readingTime":{"minutes":1.03,"words":310},"filePathRelative":"code/language/typescript/小满TypeScript基础教学/04-元组类型.md","localizedDate":"2023年9月19日","excerpt":"<p>如果需要一个固定大小的不同类型值的集合，我们需要使用元组。</p>\\n<h2> 元组就是数组的变种</h2>\\n<p><strong>元组（Tuple）是固定数量的不同类型的元素的组合</strong>。</p>\\n<p>元组与集合的不同之处在于，元组中的元素类型可以是不同的，而且数量固定。元组的好处在于可以把多个元素作为一个单元传递。<mark>如果一个方法需要返回多个值，可以把这多个值作为元组返回，而不需要创建额外的类来表示。</mark></p>\\n<div class=\\"language-TypeScript line-numbers-mode\\" data-ext=\\"TypeScript\\"><pre class=\\"language-TypeScript\\"><code>let arr:[number,string] = [1,'string']\\n\\nlet arr2: readonly [number,boolean,string,undefined] = [1,true,'sring',undefined]\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Huxzhi"},"autoDesc":true}`);export{e as data};
