const e=JSON.parse('{"key":"v-86832b20","path":"/code/front-end-interview/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/4-%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%B5%85%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B7%B1%E6%8B%B7%E8%B4%9D.html","title":"4-对象的浅拷贝和深拷贝","lang":"zh-CN","frontmatter":{"title":"4-对象的浅拷贝和深拷贝","updated":"2023-05-13 22:56","description":"4-对象的浅拷贝和深拷贝 传址，传值，内存 堆栈的一个知识点 复杂数据类型 浅拷贝：复杂数据类型的传址 深拷贝：完全赋值一份数据一致的非同一个地址的数据 深拷贝 JSON.parse(JSON.stringify(obj)) JSON.parse(JSON.stringify(obj)) 对象转换成字符串，然后再转换为对象 缺点是 undefined 和 函数 无法赋值 最标准常用的深拷贝方法是递归进行拷贝","head":[["meta",{"property":"og:url","content":"https://huxzhi.github.io/code/front-end-interview/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/4-%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%B5%85%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B7%B1%E6%8B%B7%E8%B4%9D.html"}],["meta",{"property":"og:site_name","content":"Huxzhiの小站"}],["meta",{"property":"og:title","content":"4-对象的浅拷贝和深拷贝"}],["meta",{"property":"og:description","content":"4-对象的浅拷贝和深拷贝 传址，传值，内存 堆栈的一个知识点 复杂数据类型 浅拷贝：复杂数据类型的传址 深拷贝：完全赋值一份数据一致的非同一个地址的数据 深拷贝 JSON.parse(JSON.stringify(obj)) JSON.parse(JSON.stringify(obj)) 对象转换成字符串，然后再转换为对象 缺点是 undefined 和 函数 无法赋值 最标准常用的深拷贝方法是递归进行拷贝"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-19T06:11:13.000Z"}],["meta",{"property":"article:author","content":"Huxzhi"}],["meta",{"property":"article:modified_time","content":"2023-09-19T06:11:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4-对象的浅拷贝和深拷贝\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-19T06:11:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Huxzhi\\",\\"url\\":\\"https://huxzhi.fun\\"}]}"]]},"headers":[{"level":2,"title":"深拷贝","slug":"深拷贝","link":"#深拷贝","children":[{"level":3,"title":"JSON.parse(JSON.stringify(obj))","slug":"json-parse-json-stringify-obj","link":"#json-parse-json-stringify-obj","children":[]},{"level":3,"title":"最标准常用的深拷贝方法是递归进行拷贝","slug":"最标准常用的深拷贝方法是递归进行拷贝","link":"#最标准常用的深拷贝方法是递归进行拷贝","children":[]}]}],"git":{"createdTime":1695103873000,"updatedTime":1695103873000,"contributors":[{"name":"张伟竣","email":"2938795170@qq.com","commits":1}]},"readingTime":{"minutes":1.12,"words":335},"filePathRelative":"code/front-end-interview/前端面试题/4-对象的浅拷贝和深拷贝.md","localizedDate":"2023年9月19日","excerpt":"<h1> 4-对象的浅拷贝和深拷贝</h1>\\n<p>传址，传值，内存 堆栈的一个知识点<br>\\n复杂数据类型<br>\\n浅拷贝：复杂数据类型的传址<br>\\n深拷贝：完全赋值一份数据一致的非同一个地址的数据</p>\\n<h2> 深拷贝</h2>\\n<h3> JSON.parse(JSON.stringify(obj))</h3>\\n<ol>\\n<li><code>JSON.parse(JSON.stringify(obj))</code><br>\\n对象转换成字符串，然后再转换为对象</li>\\n</ol>\\n<p>缺点是<br>\\n<code>undefined</code> 和 函数 无法赋值</p>\\n<h3> 最标准常用的深拷贝方法是递归进行拷贝</h3>","copyright":{"author":"Huxzhi"},"autoDesc":true}');export{e as data};
